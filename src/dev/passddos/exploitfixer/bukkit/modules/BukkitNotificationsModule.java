package dev._2lstudios.exploitfixer.bukkit.modules;

import java.util.logging.Logger;

import org.bukkit.Server;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

import dev._2lstudios.exploitfixer.shared.modules.NotificationsModule;

public class BukkitNotificationsModule extends NotificationsModule {
	private final CommandSender console;
	private final Server server;

	public BukkitNotificationsModule(final CommandSender console, final Logger logger, final Server server) {
		super(logger);
		this.console = console;
		this.server = server;
	}

	@Override
	public void sendNotification(final String check, final Object player, final int violations) {
		if (isEnabled() && player != null) {
			final Player player1 = (Player) player;
			final int ping = getPing(player1);
			final String notification = getMessage().replace("%player%", player1.getName()).replace("%check%", check)
					.replace("%ping%", String.valueOf(ping)).replace("%vls%", String.valueOf(violations));

			console.sendMessage(notification);

			for (final String playerName : getNotifications()) {
				final Player player2 = server.getPlayer(playerName);

				if (player2 != null) {
					player2.sendMessage(notification);
				}
			}
		}
	}

	private int getPing(final Player player) {
		try {
			final Object playerHandle = player.getClass().getMethod("getHandle").invoke(player);

			return (int) playerHandle.getClass().getField("ping").get(playerHandle);
		} catch (final Exception ignored) {
			return 0;
		}
	}
}
