package dev._2lstudios.exploitfixer.bungee.listeners;

import dev._2lstudios.exploitfixer.bungee.exploit.BungeeExploitPlayer;
import dev._2lstudios.exploitfixer.bungee.managers.ExploitPlayerManager;
import dev._2lstudios.exploitfixer.bungee.managers.ModuleManager;
import dev._2lstudios.exploitfixer.shared.modules.CommandsModule;
import net.md_5.bungee.api.connection.Connection;
import net.md_5.bungee.api.connection.ProxiedPlayer;
import net.md_5.bungee.api.event.ChatEvent;
import net.md_5.bungee.api.plugin.Listener;
import net.md_5.bungee.api.plugin.Plugin;
import net.md_5.bungee.event.EventHandler;

public class ChatListener implements Listener {
	private final CommandsModule commandsModule;
	private final ExploitPlayerManager exploitPlayerManager;

	ChatListener(final Plugin plugin, final ModuleManager moduleManager) {
		this.commandsModule = moduleManager.getCommandsModule();
		this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
	}

	@EventHandler(priority = -128)
	public void onChat(final ChatEvent event) {
		if (!event.isCancelled() && event.isCommand()) {
			final Connection connection = event.getSender();

			if (connection instanceof ProxiedPlayer) {
				final ProxiedPlayer player = (ProxiedPlayer) connection;
				final BungeeExploitPlayer exploitPlayer = exploitPlayerManager.get(player);

				if (!exploitPlayer.isLogged()) {
					event.setCancelled(true);
				} else if (commandsModule.isEnabled()) {
					final String message = event.getMessage().replaceAll("[\\w]{1,}:", "").toLowerCase();

					for (final String command : commandsModule.getCommands()) {
						if (message.startsWith(command)) {
							exploitPlayer.punish(commandsModule, player, commandsModule.getPunishments(), 1);

							event.setCancelled(true);
							break;
						}
					}
				}
			}
		}
	}
}
