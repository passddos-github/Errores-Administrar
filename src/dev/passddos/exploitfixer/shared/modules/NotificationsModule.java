package dev._2lstudios.exploitfixer.shared.modules;

import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.Map.Entry;
import java.util.logging.Logger;

import dev._2lstudios.exploitfixer.shared.configuration.IConfiguration;
import dev._2lstudios.exploitfixer.shared.interfaces.INotificationsModule;

public class NotificationsModule implements INotificationsModule {
    private final Logger logger;
    private final Map<String, Integer> packetDebug = new HashMap<>();
    private final Collection<String> notifications = new HashSet<>();
    private boolean enabled, debug;
    private String message;

    public NotificationsModule(final Logger logger) {
        this.logger = logger;
    }

    public String getMessage() {
        return message;
    }

    public void reload(final IConfiguration configYml) {
        this.enabled = configYml.getBoolean("notifications.enabled");
        this.debug = configYml.getBoolean("notifications.debug");
        this.message = configYml.getString("notifications.message").replace('&', '\u00A7');
    }

    @Override
    public boolean isEnabled() {
        return this.enabled;
    }

    public void addPacketDebug(final String packetType) {
        if (this.debug) {
            packetDebug.put(packetType, packetDebug.getOrDefault(packetType, 0) + 1);
        }
    }

    public void debugPackets() {
        if (this.debug && !packetDebug.isEmpty()) {
            final Set<Entry<String, Integer>> entries = new HashSet<>(packetDebug.entrySet());
            final StringBuilder stringBuilder = new StringBuilder("Received Packets: ");
            boolean isFirst = true;

            packetDebug.clear();

            for (final Entry<String, Integer> packetEntry : entries) {
                final String packetType = packetEntry.getKey();
                final int amount = packetEntry.getValue();

                if (isFirst) {
                    isFirst = false;
                } else {
                    stringBuilder.append(", ");
                }

                stringBuilder.append("x").append(amount).append(" ").append(packetType);
            }

            debug(stringBuilder.toString());
        }
    }

    public void debug(final String message) {
        if (this.debug) {
            this.logger.info(message);
        }
    }

    public final void setNotifications(final String playerName, final boolean input) {
        if (input) {
            notifications.add(playerName);
        } else {
            notifications.remove(playerName);
        }
    }

    public final boolean isNotifications(final String playerName) {
        return notifications.contains(playerName);
    }

    public final Collection<String> getNotifications() {
        return notifications;
    }

    @Override
    public String getName() {
        return "Notifications";
    }

    @Override
    public void sendNotification(String check, Object player, int violations) {
        // Overrided by parent Bukkit/Bungee NotificationsModule
    }
}